# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class StockInfoLong(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, ticker: str=None, name: str=None, description: str=None, currency: str=None, sector: str=None, industry: str=None, annual_dividend: float=None, annual_dividend_rate: float=None, forward_pe: float=None, five_years_avg_dividend: float=None, : str=None):  # noqa: E501
        """StockInfoLong - a model defined in Swagger

        :param id: The id of this StockInfoLong.  # noqa: E501
        :type id: int
        :param ticker: The ticker of this StockInfoLong.  # noqa: E501
        :type ticker: str
        :param name: The name of this StockInfoLong.  # noqa: E501
        :type name: str
        :param description: The description of this StockInfoLong.  # noqa: E501
        :type description: str
        :param currency: The currency of this StockInfoLong.  # noqa: E501
        :type currency: str
        :param sector: The sector of this StockInfoLong.  # noqa: E501
        :type sector: str
        :param industry: The industry of this StockInfoLong.  # noqa: E501
        :type industry: str
        :param annual_dividend: The annual_dividend of this StockInfoLong.  # noqa: E501
        :type annual_dividend: float
        :param annual_dividend_rate: The annual_dividend_rate of this StockInfoLong.  # noqa: E501
        :type annual_dividend_rate: float
        :param forward_pe: The forward_pe of this StockInfoLong.  # noqa: E501
        :type forward_pe: float
        :param five_years_avg_dividend: The five_years_avg_dividend of this StockInfoLong.  # noqa: E501
        :type five_years_avg_dividend: float
        :param : The  of this StockInfoLong.  # noqa: E501
        :type : str
        """
        self.swagger_types = {
            'id': int,
            'ticker': str,
            'name': str,
            'description': str,
            'currency': str,
            'sector': str,
            'industry': str,
            'annual_dividend': float,
            'annual_dividend_rate': float,
            'forward_pe': float,
            'five_years_avg_dividend': float,
            '': str
        }

        self.attribute_map = {
            'id': 'id',
            'ticker': 'ticker',
            'name': 'name',
            'description': 'description',
            'currency': 'currency',
            'sector': 'sector',
            'industry': 'industry',
            'annual_dividend': 'annualDividend',
            'annual_dividend_rate': 'annualDividendRate',
            'forward_pe': 'forwardPE',
            'five_years_avg_dividend': 'fiveYearsAvgDividend',
            '': ''
        }
        self._id = id
        self._ticker = ticker
        self._name = name
        self._description = description
        self._currency = currency
        self._sector = sector
        self._industry = industry
        self._annual_dividend = annual_dividend
        self._annual_dividend_rate = annual_dividend_rate
        self._forward_pe = forward_pe
        self._five_years_avg_dividend = five_years_avg_dividend
        self._ = 

    @classmethod
    def from_dict(cls, dikt) -> 'StockInfoLong':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StockInfoLong of this StockInfoLong.  # noqa: E501
        :rtype: StockInfoLong
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this StockInfoLong.


        :return: The id of this StockInfoLong.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this StockInfoLong.


        :param id: The id of this StockInfoLong.
        :type id: int
        """

        self._id = id

    @property
    def ticker(self) -> str:
        """Gets the ticker of this StockInfoLong.


        :return: The ticker of this StockInfoLong.
        :rtype: str
        """
        return self._ticker

    @ticker.setter
    def ticker(self, ticker: str):
        """Sets the ticker of this StockInfoLong.


        :param ticker: The ticker of this StockInfoLong.
        :type ticker: str
        """

        self._ticker = ticker

    @property
    def name(self) -> str:
        """Gets the name of this StockInfoLong.


        :return: The name of this StockInfoLong.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this StockInfoLong.


        :param name: The name of this StockInfoLong.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this StockInfoLong.


        :return: The description of this StockInfoLong.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this StockInfoLong.


        :param description: The description of this StockInfoLong.
        :type description: str
        """

        self._description = description

    @property
    def currency(self) -> str:
        """Gets the currency of this StockInfoLong.


        :return: The currency of this StockInfoLong.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this StockInfoLong.


        :param currency: The currency of this StockInfoLong.
        :type currency: str
        """

        self._currency = currency

    @property
    def sector(self) -> str:
        """Gets the sector of this StockInfoLong.


        :return: The sector of this StockInfoLong.
        :rtype: str
        """
        return self._sector

    @sector.setter
    def sector(self, sector: str):
        """Sets the sector of this StockInfoLong.


        :param sector: The sector of this StockInfoLong.
        :type sector: str
        """

        self._sector = sector

    @property
    def industry(self) -> str:
        """Gets the industry of this StockInfoLong.


        :return: The industry of this StockInfoLong.
        :rtype: str
        """
        return self._industry

    @industry.setter
    def industry(self, industry: str):
        """Sets the industry of this StockInfoLong.


        :param industry: The industry of this StockInfoLong.
        :type industry: str
        """

        self._industry = industry

    @property
    def annual_dividend(self) -> float:
        """Gets the annual_dividend of this StockInfoLong.


        :return: The annual_dividend of this StockInfoLong.
        :rtype: float
        """
        return self._annual_dividend

    @annual_dividend.setter
    def annual_dividend(self, annual_dividend: float):
        """Sets the annual_dividend of this StockInfoLong.


        :param annual_dividend: The annual_dividend of this StockInfoLong.
        :type annual_dividend: float
        """

        self._annual_dividend = annual_dividend

    @property
    def annual_dividend_rate(self) -> float:
        """Gets the annual_dividend_rate of this StockInfoLong.


        :return: The annual_dividend_rate of this StockInfoLong.
        :rtype: float
        """
        return self._annual_dividend_rate

    @annual_dividend_rate.setter
    def annual_dividend_rate(self, annual_dividend_rate: float):
        """Sets the annual_dividend_rate of this StockInfoLong.


        :param annual_dividend_rate: The annual_dividend_rate of this StockInfoLong.
        :type annual_dividend_rate: float
        """

        self._annual_dividend_rate = annual_dividend_rate

    @property
    def forward_pe(self) -> float:
        """Gets the forward_pe of this StockInfoLong.


        :return: The forward_pe of this StockInfoLong.
        :rtype: float
        """
        return self._forward_pe

    @forward_pe.setter
    def forward_pe(self, forward_pe: float):
        """Sets the forward_pe of this StockInfoLong.


        :param forward_pe: The forward_pe of this StockInfoLong.
        :type forward_pe: float
        """

        self._forward_pe = forward_pe

    @property
    def five_years_avg_dividend(self) -> float:
        """Gets the five_years_avg_dividend of this StockInfoLong.


        :return: The five_years_avg_dividend of this StockInfoLong.
        :rtype: float
        """
        return self._five_years_avg_dividend

    @five_years_avg_dividend.setter
    def five_years_avg_dividend(self, five_years_avg_dividend: float):
        """Sets the five_years_avg_dividend of this StockInfoLong.


        :param five_years_avg_dividend: The five_years_avg_dividend of this StockInfoLong.
        :type five_years_avg_dividend: float
        """

        self._five_years_avg_dividend = five_years_avg_dividend

    @property
    def (self) -> str:
        """Gets the  of this StockInfoLong.


        :return: The  of this StockInfoLong.
        :rtype: str
        """
        return self._

    @.setter
    def (self, : str):
        """Sets the  of this StockInfoLong.


        :param : The  of this StockInfoLong.
        :type : str
        """

        self._ = 
