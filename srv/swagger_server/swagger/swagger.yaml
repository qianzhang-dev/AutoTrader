openapi: 3.0.0
info:
  title: AutoTrader
  termsOfService: https://github.com/qianzhang-dev/AutoTrader
  contact:
    name: DinasourFaFaFa
    url: DinasourFaFaFa
  license:
    name: MIT
  version: 1.1.0
servers:
- url: http://localhost:3000
paths:
  /users/{userId}:
    get:
      tags: []
      summary: Get User Info by User ID
      description: Retrieve the information of the user with the matching user ID.
      operationId: get_users_user_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      operationId: delete_users_user_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
    patch:
      summary: Update User Information
      operationId: patch_users_user_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "409":
          description: Conflict
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /user:
    post:
      summary: Create New User
      description: Create a new user.
      operationId: post_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        "200":
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "400":
          description: Bad Request
        "409":
          description: Conflict
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /users/{userId}/alerts:
    get:
      tags: []
      summary: Get all alerts bound to a user
      description: Get a list of alert that the user owns
      operationId: get_users_user_id_alerts
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertResponse'
                x-content-type: application/json
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /users/{userId}/alerts/{ticker}:
    get:
      tags: []
      summary: Get alerts bound to user matches the ticker
      description: Get the alert of a specific ticker for a user
      operationId: get_users_user_id_alerts_ticker
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: ticker
        in: path
        description: The ticker of alerts to be specified
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertResponse'
                x-content-type: application/json
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /users/{userId}/alert:
    post:
      summary: Create an alert with expected rules
      description: Create a new alert for a specific ticker on a specific event
      operationId: post_users_user_id_alert
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "409":
          description: Conflict
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /users/{userId}/alerts/{ticker}/{alertId}:
    get:
      tags: []
      summary: Get a specific alert by id
      operationId: get_users_user_id_alerts_ticker_alert_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: ticker
        in: path
        description: The ticker of alerts to be specified
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: alertId
        in: path
        description: Id of an existing alert
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      operationId: delete_users_user_id_alerts_ticker_alert_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: ticker
        in: path
        description: The ticker of alerts to be specified
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: alertId
        in: path
        description: Id of an existing alert
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
    patch:
      operationId: patch_users_user_id_alerts_ticker_alert_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: ticker
        in: path
        description: The ticker of alerts to be specified
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: alertId
        in: path
        description: Id of an existing alert
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /ping:
    get:
      tags: []
      summary: Healthcheck Endpoint
      description: Healthcheck endpoint of the current site
      operationId: get_ping
      responses:
        "200":
          description: OK
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /login:
    post:
      operationId: post_login
      parameters: []
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "401":
          description: Unauthorized
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /users/{userId}/monitor:
    post:
      operationId: post_users_user_id_monitor
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorRequest'
      responses:
        "200":
          description: OK
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /users/{userId}/monitors?filter={eventType}:
    get:
      tags: []
      summary: Your GET endpoint
      operationId: get_users_user_id_monitors
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: eventType
        in: path
        description: The list of eventTypes (e.g. upCross50MA,downCross100MA)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitorResponse'
                x-content-type: application/json
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /users/{userId}/monitors/{monitorId}:
    get:
      tags: []
      summary: Your GET endpoint
      operationId: get_users_user_id_monitors_monitor_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: monitorId
        in: path
        description: Id of the registered monitor
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      operationId: delete_users_user_id_monitors_monitor_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: monitorId
        in: path
        description: Id of the registered monitor
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
    patch:
      operationId: patch_users_user_id_monitors_monitor_id
      parameters:
      - name: userId
        in: path
        description: Id of an existing user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: monitorId
        in: path
        description: Id of the registered monitor
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - basic_authorization: []
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /strategy:
    post:
      description: Create a new strategy.
      operationId: post_strategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      x-openapi-router-controller: swagger_server.controllers.default_controller
    patch:
      description: Update an exisiting strategy.
      operationId: patch_strategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /strategyActivity:
    post:
      description: Create a new activity for strategy.
      operationId: post_strategy_activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyActivityRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      x-openapi-router-controller: swagger_server.controllers.default_controller
    patch:
      description: Update an existing activity for streategy.
      operationId: patch_strategy_activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyActivityRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /strategy/{ownerId}:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get all strategies of a specific user.
      operationId: get_strategy_owner_id
      parameters:
      - name: ownerId
        in: path
        description: owner id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StrategyResponse'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /strategyActivity/{strategyId}:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get all activities of the specific strategy.
      operationId: get_strategy_activity_strategy_id
      parameters:
      - name: strategyId
        in: path
        description: strategy id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StrategyActivityResponse'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /getAllTickersAndSectors:
    get:
      tags: []
      summary: Your GET endpoint
      description: Retrieve all tickers and related info (include sector) into Ticker
        database.
      operationId: get_get_all_tickers_and_sectors
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /tickers:
    get:
      tags: []
      summary: Your GET endpoint
      description: Retrieve all tickers from database.
      operationId: get_tickers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /stockInfo/short/{ticker}:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get short information of a stock by ticker.
      operationId: get_stock_info_short_ticker
      parameters:
      - name: ticker
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockInfoShort'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /strategies:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get all strategies.
      operationId: get_strategies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /sectors:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get all sectors.
      operationId: get_sectors
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /investmentTerms:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get investment terms.
      operationId: get_investment_terms
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /tradeOperators:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get all trade operators.
      operationId: get_trade_operators
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /marketCodes:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get all market codes.
      operationId: get_market_codes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /watchlist/{ownerId}:
    get:
      tags: []
      summary: Your GET endpoint
      description: Get watchlist of a specific user.
      operationId: get_watchlist_owner_id
      parameters:
      - name: ownerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "404":
          description: Not Found
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /watchlist:
    post:
      description: Update watchlist of a specific user.
      operationId: post_watchlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchlistRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    UserResponse:
      title: UserResponse
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          example: 1
        username:
          type: string
          description: The username of the user
          example: rogerxman
        email:
          type: string
          format: email
          example: roger@xman.com
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createdDate:
          type: string
          description: The date that the user was created.
          format: date-time
        lastLoggedInDate:
          type: string
          format: date-time
      example:
        emailVerified: true
        createdDate: 2000-01-23T04:56:07.000+00:00
        lastLoggedInDate: 2000-01-23T04:56:07.000+00:00
        id: 1
        email: roger@xman.com
        username: rogerxman
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: 1997-10-31
          emailVerified: true
          signUpDate: 2019-08-24
    AlertResponse:
      title: AlertResponse
      type: object
      properties:
        id:
          type: integer
        eventType:
          type: string
          example: upCross
          enum:
          - upCross
          - downCross
        ticker:
          type: string
          example: MSFT
        disabled:
          type: boolean
        createdTime:
          type: string
          format: date-time
        lastTriggeredTime:
          type: string
          format: date-time
        ownerId:
          type: integer
        price:
          type: number
      example:
        ticker: MSFT
        lastTriggeredTime: 2000-01-23T04:56:07.000+00:00
        price: 1.4658129805029452
        createdTime: 2000-01-23T04:56:07.000+00:00
        disabled: true
        id: 0
        eventType: upCross
        ownerId: 6
    UserRequest:
      title: UserRequest
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
        email:
          type: string
          format: email
    AlertRequest:
      title: AlertRequest
      required:
      - eventType
      - price
      - ticker
      type: object
      properties:
        ticker:
          type: string
        eventType:
          type: string
          enum:
          - upCross
          - downCross
        price:
          type: number
    MonitorRequest:
      title: MonitorRequest
      required:
      - eventType
      - ticker
      type: object
      properties:
        ticker:
          type: string
        eventType:
          type: string
          enum:
          - downCross50MA
          - upCross50MA
          - downCross100MA
          - upCross100MA
          - downCross10MA
          - upCross10MA
          - downCross200MA
          - upCross200MA
    MonitorResponse:
      title: MonitorResponse
      type: object
      properties:
        id:
          type: string
        eventType:
          type: string
        ticker:
          type: string
        createdDate:
          type: string
          format: date-time
        lastTriggeredDate:
          type: string
          format: date-time
      example:
        ticker: ticker
        createdDate: 2000-01-23T04:56:07.000+00:00
        id: id
        eventType: eventType
        lastTriggeredDate: 2000-01-23T04:56:07.000+00:00
    StrategyRequest:
      title: StrategyRequest
      required:
      - is_completed
      - owner_id
      - sector
      - strategy_name
      - strategy_type
      - term
      - ticker
      type: object
      properties:
        id:
          type: integer
        strategy_name:
          type: string
        owner_id:
          type: integer
        strategy_type:
          type: string
        is_completed:
          type: boolean
        ticker:
          type: string
        term:
          type: string
        sector:
          type: string
        goal_summary:
          type: string
        target_prices:
          type: array
          items:
            type: number
        stop_loss_prices:
          type: array
          items:
            type: number
        cost_basis:
          type: number
        quantity:
          type: integer
        total_return:
          type: number
        dividend_return:
          type: number
    StrategyResponse:
      title: StrategyResponse
      type: object
      properties:
        id:
          type: integer
        strategy_name:
          type: string
        owner_id:
          type: integer
        strategy_type:
          type: string
        is_completed:
          type: boolean
        ticker:
          type: string
        term:
          type: string
        sector:
          type: string
        goal_summary:
          type: string
        target_prices:
          type: array
          items:
            type: number
        stop_loss_prices:
          type: array
          items:
            type: number
        cost_basis:
          type: number
        quantity:
          type: integer
        total_return:
          type: number
        dividend_return:
          type: number
      example:
        ticker: ticker
        quantity: 2
        owner_id: 6
        strategy_type: strategy_type
        is_completed: true
        cost_basis: 5.637376656633329
        total_return: 7.061401241503109
        stop_loss_prices:
        - 5.962133916683182
        - 5.962133916683182
        goal_summary: goal_summary
        target_prices:
        - 1.4658129805029452
        - 1.4658129805029452
        dividend_return: 9.301444243932576
        term: term
        id: 0
        sector: sector
        strategy_name: strategy_name
    StrategyActivityRequest:
      title: StrategyActivityRequest
      required:
      - operator
      - strategy_id
      type: object
      properties:
        id:
          type: integer
        strategy_id:
          type: integer
        operator:
          type: string
        comment:
          type: string
        price:
          type: number
        quantity:
          type: integer
        target_prices:
          type: array
          items:
            type: number
        stop_loss_prices:
          type: array
          items:
            type: number
    StrategyActivityResponse:
      title: StrategyActivityResponse
      type: object
      properties:
        id:
          type: integer
        strategy_id:
          type: integer
        operator:
          type: string
        comment:
          type: string
        price:
          type: number
        quantity:
          type: integer
        target_prices:
          type: array
          items:
            type: number
        stop_loss_prices:
          type: array
          items:
            type: number
      example:
        stop_loss_prices:
        - 2.3021358869347655
        - 2.3021358869347655
        quantity: 5
        price: 1.4658129805029452
        strategy_id: 6
        target_prices:
        - 5.637376656633329
        - 5.637376656633329
        comment: comment
        id: 0
        operator: operator
    StockInfoShort:
      title: StockInfoShort
      type: object
      properties:
        id:
          type: integer
        marketCode:
          type: string
        name:
          type: string
        description:
          type: string
        sector:
          type: string
        currency:
          type: string
        ticker:
          type: string
      example:
        ticker: ticker
        name: name
        marketCode: marketCode
        description: description
        currency: currency
        id: 0
        sector: sector
    StockInfoLong:
      title: StockInfoLong
      type: object
      properties:
        id:
          type: integer
        ticker:
          type: string
        name:
          type: string
        description:
          type: string
        currency:
          type: string
        sector:
          type: string
        industry:
          type: string
        annualDividend:
          type: number
        annualDividendRate:
          type: number
        forwardPE:
          type: number
        fiveYearsAvgDividend:
          type: number
        ? ""
        : type: string
    WatchlistRequest:
      title: WatchlistRequest
      type: object
      properties:
        ownerId:
          type: integer
        watchlist:
          type: array
          items:
            type: string
  securitySchemes:
    basic_authorization:
      type: http
      scheme: basic
      x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_basic_authorization

